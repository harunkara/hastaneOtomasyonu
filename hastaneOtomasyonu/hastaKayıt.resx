<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="btnAnaSayfa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        E/8nTJr0Dyb0S9SJJfDzAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEADw8AAAEAIADoAwAAFgAAACgAAAAPAAAAHgAAAAEAIAAAAAAAhAMAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQIiIEbk9PCJFcWgmgWFgJpF5cCq1gXgqvV1cJnR4eAl0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAApLSwequbYU/7m2FP+5thT/ubYU/7m2FP+5thT/ubYU/6WiEegYGAJcAAAAAAAA
        AAAAAAAAAAAAABISA1KysBL2nZsQ4nt6Dc61shT7ubYU/7m2FP+RkBTYUlcqurCtEvRRTwiWAAAAAAAA
        AAAAAAAAAAAAADg4BnC5thT/P0Y+tBcwoMyysBL2ubYU/7m2FP9HTja2Gze52KCeEeVYVwmhAAAAAAAA
        AAAAAAAAAAAAAENBCHW5thT/N0FJtBcxpM47RUK0Rk05tUxRMLgdKlS2GTOq0aOgEehQTgiVAAAAAAAA
        AAAAAAAAAAAAADk3BYC5thT/LjpTtCBE4fMcOb3ZGDKn0BYtmckbOcHcGTOq0a2qE/FTUQmKAAAAAAAA
        AAAAAAAAAAAAAElHCH25thT/LTthtBssbbicmhDiq6gT7rWyFPw1P0W0GTOq0a2qE/FSUQiaAAAAAAAA
        AAAAAAAAAAAAAD4+Bn+5thT/LT5ltB0tZ7e5thT/ubYU/7m2FP81Qle0FzCdza2qE/FiYAmzAAAAAAAA
        AAAAAAAAAAAAAEJABne5thT/KTI/tBwlQLa5thT/ubYU/7m2FP85PzG1DhlFu6+sEvRwbgvBAAAAAAAA
        AAAAAAAAAAAAADExBnK5thT/sq8S+Lm2FP+5thT/ubYU/7m2FP+5thT/ubYU/7m2FP9ZVwmmAAAAAAAA
        AAAAAAAAAAAAAAAAACRlZAm1mJQQ3ZuYEeCVkhDbnJoQ4pyaEOKcmBDhgHwNz1NSCacLCwAuAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAAKQAAACIAAAAiAAAAIgAAACIAAAAiAAAAFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//gAA//4AAOAOAADABgAAwAYAAMAGAADABgAAwAYAAMAGAADABgAAwAYAAMAGAADABgAA4B4AAP/+
        AAA=
</value>
  </data>
</root>